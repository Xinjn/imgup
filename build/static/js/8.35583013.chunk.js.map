{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Wrapper","styled","div","HeaderWrapper","UploadWrapper","H1","h1","H3","h3","UploadWrapper2","Button","Upload2","ResultWrapper","H2","h2","Image","img","UploadTop","Close","Compenent","observer","useStores","ImageStore","UserStore","history","useHistory","ref1","useRef","ref2","useState","state","setState","t","useTranslation","store","useLocalStore","width","setWidth","height","setHeight","serverFile","attributes","url","widthStr","heightStr","toggle","event","console","log","stopPropagation","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","push","window","test","type","size","error","upload","then","catch","Header","tip","spinning","isUpLoading","icon","UploadOutlined","onClick","style","display","className","aria-hidden","xlinkHref","InboxOutlined","target","href","rel","filename","src","ref","onChange","current","value","placeholder","fullStr","Tips","Home","children","Uploader"],"mappings":"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","file":"static/js/8.35583013.chunk.js","sourcesContent":["import React,{useRef, useState} from 'react';\nimport { useStores } from './../stores/index';\nimport { observer, useLocalStore} from 'mobx-react'\nimport { message, Upload,Spin,Button} from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { UploadOutlined } from '@ant-design/icons';\nimport Header from '../components/Header';\nimport \"../assets/upload.css\"\nimport {useTranslation} from 'react-i18next'\n\nconst { Dragger } = Upload;\n\n//总容器\nconst Wrapper = styled.div`\n`\n//头部\nconst HeaderWrapper = styled.div`\n        // border:1px solid red;\n        position: fixed;\n        top:0;\n        left:0;\n        width:100vw;\n`\n\n//展示容器\nconst UploadWrapper = styled.div`\n    text-align:center;\n    margin:30px auto;\n`\n//大标题\nconst H1 = styled.h1`\n    margin:0;\n    color:#fff;\n    text-align:center;\n    font-size:3em;\n    ling-height:120%;\n    font-weight:600;\n    text-shadow:1px 1px 2px rgba(0,0,0,.25);\n`\n//小标题\nconst H3 = styled.h3`\n    color:#fff;\n    font-family:Helvetica,Arial,sans-serif;\n    font-size:22px;\n    font-weight:100;\n    text-shadow:1px 1px 2px rgba(0,0,0,0.25);\n    text-align:center;\n`\n//按钮\nconst ButtonWrapper = styled(Button)`\n    margin-left:20px;\n`\n//上传总容器\nconst UploadWrapper2 = styled.div`\n    top:0px;\n    position: fixed;\n    left:0;\n    right:0;\n   \n`\n//上传容器\nconst Upload2 = styled.div`\n    .button{\n        display:flex;\n        justify-content:flex-end;\n    }\n    .ant-upload.ant-upload-drag{\n        border:none;\n    }\n   \n\n` \n//上传结果\nconst ResultWrapper = styled.div`\n    background: #fff;\n    padding:0;\n    text-align:center;\n`\n//上传结果标题\nconst H2 = styled.h2`\n    text-align:center;\n`\n//上传结果图片\nconst Image = styled.img`\n    max-width:300px;\n`\nconst UploadTop = styled.div`\n    display:flex;\n    // border:1px solid red;\n    justify-content:space-between;\n    padding:0 10px;\n`\n//关闭按钮\nconst Close = styled.div`\n\ndisplay:flex;\njustify-content:center;\n\n.icon{\n    margin:4px 2px 0 0;\n\n  width:15px;\n  height: 15px;\n\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\nspan{\n\n}\n`\nconst Compenent = observer(() => { \n    const { ImageStore, UserStore } = useStores()\n    const history = useHistory()\n    const ref1 = useRef()\n    const ref2 = useRef()\n    const [state,setState] = useState(false)\n    const {t} = useTranslation()\n    \n    const store = useLocalStore(() => ({\n        width: null,\n        setWidth(width) {\n            store.width = width\n        },\n        get widthStr() {\n            return store.width?`/w/${store.width}`:\"\"\n        },\n        height: null,\n        setHeight(height) {\n            store.height = height\n        },\n        get heightStr() {\n            return store.height?`/h/${store.height}`:\"\"\n        },\n        get fullStr() {\n            //?imageView2/0/w/800/h/400\n            return ImageStore.serverFile.attributes.url.attributes.url+'?imageView2/0'+store.widthStr+store.heightStr\n        }\n    }))\n    const toggle = (event) => {\n        console.log(event);\n        event.stopPropagation();//阻止冒泡\n        setState(!state)\n    }\n\n    const bindWidthChange = () => {\n        console.log('bindWidthChange');\n        console.log(ref1.current.value);\n        store.setWidth(ref1.current.value)\n    }\n\n    const bindHeightChange = () => {\n        console.log('bindHeightChange');\n        console.log(ref2.current.value);\n        store.setHeight(ref2.current.value)\n    }\n\n    const props = {\n        showUploadList:false,\n        beforeUpload: file => {\n\n            ImageStore.setFile(file)\n            ImageStore.setFilename(file.name)\n            if (UserStore.currentUser === null) {\n                message.warning('请先登录再上传')\n                history.push('/login')\n                return false\n            }\n            window.file = file\n            if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(git$)/ig.test(file.type)) {\n                message.error('只能上传png/svg/jpg/gif格式的图片')\n                return false\n            }\n            if (file.size > 1024 * 1024) {\n                message.error('图片最大1M')\n                return false\n            }\n            ImageStore.upload()\n                .then((serverFile) => {\n                    console.log('上传成功');\n                    console.log(serverFile);\n                }).catch(() => {\n                    console.log('上传失败');\n            })\n            return false\n        }\n    };\n\n    return (\n        <Wrapper>\n            <HeaderWrapper>\n                <Header/>\n            </HeaderWrapper>\n            <UploadWrapper>\n               \n                <H1>{t('上传与分享您的照片')}</H1>\n                <H3>{t('imgup图床-高速稳定的图片上传和外链服务')}<br/>\n                    {t('任意拖放图片到这里，即可上传您的图片，最大20MB图片大小。')}<br/>\n                    {t('直接的源图片链接，HTML缩略图显示，禁止上传任何违法图片')}</H3>\n                <Spin tip=\"上传中\" spinning={ImageStore.isUpLoading}>\n\n                    <Upload {...props}>\n                            <Button icon={<UploadOutlined />} onClick={toggle}> {t('开始上传')}</Button> \n                    </Upload>\n\n                    {/* <ButtonWrapper icon={<UploadOutlined />} onClick={toggle}>拖拽上传</ButtonWrapper> */}\n                </Spin>\n                {/* <H3>本站已托管 16,429,429 张图片</H3> */}\n            </UploadWrapper>\n\n            <UploadWrapper2>\n                <Upload2 style={{display: state ? \"block\" : \"none\"}}>\n                    <Dragger {...props}>\n                            <UploadTop >\n                                <span>JPG PNG 10MB</span>\n                            <Close type=\"primary\" onClick={toggle} className=\"button\">\n                                <svg className=\"icon\" aria-hidden=\"true\">\n                                <use xlinkHref=\"#icon-guanbi1\"></use>\n                                </svg>\n                                <span>{t('关闭')}</span>\n                            </Close>\n                            </UploadTop>\n                            \n                            <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                            </p>\n                            <p className=\"ant-upload-text\">{t('单击或拖动文件到此区域以上载')}</p>\n                            <p className=\"ant-upload-hint\">\n                              {t('支持单次或批量上传。严禁上传公司资料或其他波段文件')}\n                            </p>\n                        </Dragger>\n                    </Upload2>\n               \n                {\n                    ImageStore.serverFile ?\n                        <ResultWrapper style={{display: state ? \"block\" : \"none\"}}>\n                             \n                            <H2>{t('上传结果')}</H2>\n                            <dl>\n                                <dt>{t('线上地址')}</dt>\n                                <dd>\n                                    <a target=\"_blank\" href={ImageStore.serverFile.attributes.url.attributes.url} rel=\"noopener noreferrer\"> \n                                        {ImageStore.serverFile.attributes.url.attributes.url}\n                                    </a>\n                                </dd>\n                                <dt>{t('文件名')}</dt>\n                                <dd>{ImageStore.filename}</dd>\n                                <dt>{t('图片预览')}</dt>\n                                <dd>\n                                    <Image src={ImageStore.serverFile.attributes.url.attributes.url} />\n                                </dd>\n                                <dt>{t('更多尺寸')}</dt>\n                                <dd>\n                                    <input ref={ref1} onChange={bindWidthChange} placeholder= {t('最大宽度（可选）')}\n                                />\n                                    <input ref={ref2}  onChange={bindHeightChange} placeholder={t('最大高度（可选）')} />\n                                </dd>\n                                <dd>\n                                    <a target=\"_blank\" href={store.fullStr} rel=\"noopener noreferrer\">{store.fullStr}</a>\n                                </dd>\n                            </dl>\n                        </ResultWrapper>\n                        : null\n               }\n            </UploadWrapper2>\n        </Wrapper>\n    )\n})\n\nexport default Compenent","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../stores';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Tips = styled.div`\n    background:orange;\n    padding:10px;\n    margin:30px 0;\n    color:#fff;\n    border-radius:4px;\n`\n\nconst Component = observer(({ children }) => {\n    const { UserStore } = useStores()\n\n    return (\n        <>\n            {\n                UserStore.currentUser\n                    ?\n                    null\n                    :\n                   \n                    <Tips >{children}</Tips>\n            }\n        </>\n    )\n})\n\nexport default Component","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Tips'\n\nconst Home = observer(() => {\n  return (\n    <>\n      {/* {<Tips>请先登录再上传！！！</Tips>} */}\n      <Uploader />\n    </>\n  )\n})\n\nexport default Home\n"],"sourceRoot":""}