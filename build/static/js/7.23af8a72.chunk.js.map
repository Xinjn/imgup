{"version":3,"sources":["components/List.js","pages/History.js"],"names":["Wrapper","styled","div","HeaderWrapper","ListWrapper","StyledButton","Button","Component","observer","HistoryStore","useStores","t","useTranslation","useEffect","find","reset","IconText","icon","text","React","createElement","Header","itemLayout","pagination","onChange","page","console","log","pageSize","dataSource","list","footer","className","renderItem","item","Item","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","heigh","alt","src","attributes","url","aria-hidden","xlinkHref","Meta","title","filename","description","type","onClick","img","window","confirm","delete","id","target","href","rel","History"],"mappings":"sTAYMA,EAAUC,IAAOC,IAAV,yJASPC,EAAgBF,IAAOC,IAAV,qHAQbE,EAAcH,IAAOC,IAAV,0BAGXG,EAAeJ,YAAOK,IAAPL,CAAH,+DAiGHM,EA5FGC,aAAS,WAAO,IACxBC,EAAiBC,cAAjBD,aACAE,EAAMC,cAAND,EAMRE,qBAAU,WAER,OADAJ,EAAaK,OACN,WACLL,EAAaM,WAEd,IAEH,IAOMC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACf,eAAC,IAAD,WACGC,IAAMC,cAAcH,GACpBC,MAGL,OACE,eAAClB,EAAD,WACE,cAACG,EAAD,UACE,cAACkB,EAAA,EAAD,MAEF,cAAC,IAAD,CACEC,WAAW,WACXC,WAAY,CACVC,SAAU,SAAAC,GACRC,QAAQC,IAAIF,IAEdG,SAAU,GAEZC,WAAYpB,EAAaqB,KACzBC,OACE,sBAAKC,UAAU,SAAf,UACE,6CADF,kBAIFC,WAAY,SAAAC,GAAI,OACd,cAAC,IAAKC,KAAN,CAEEC,QAAS,CACP,cAACpB,EAAD,CAAUC,KAAMoB,IAAcnB,KAAK,OAAU,wBAC7C,cAACF,EAAD,CAAUC,KAAMqB,IAAcpB,KAAK,OAAU,wBAC7C,cAACF,EAAD,CAAUC,KAAMsB,IAAiBrB,KAAK,KAAQ,0BAEhDsB,MAAO,qBAAKC,MAAO,IAAKC,MAAO,IAAKC,IAAI,OAAOC,IAAKV,EAAKW,WAAWC,IAAID,WAAWC,MAPrF,SASE,eAAC,IAAD,WACE,sBAAKd,UAAU,QAAf,UACE,qBAAKA,UAAU,OAAOe,cAAY,OAAlC,SACE,qBAAKC,UAAU,sBAEjB,cAAC,IAAKb,KAAKc,KAAX,CAAgBC,MAAOvC,EAAE,kCAAWuB,EAAKW,WAAWM,SAAUC,YAAalB,EAAKkB,cAChF,cAAChD,EAAD,UACE,cAACC,EAAD,CACEgD,KAAK,UACLC,QAAS,WAnDL,IAAAC,IAoDYrB,EAnDhBsB,OAAOC,QAAQ,kGAE7BhD,EAAaiD,OAAOH,EAAII,KA8CZ,SAMGhD,EAAE,uBAKT,iCACG,IACAA,EAAE,yBAED,mBAAGiD,OAAO,SAASC,KAAM3B,EAAKW,WAAWC,IAAID,WAAWC,IAAKgB,IAAI,sBAAjE,SACG5B,EAAKW,WAAWC,IAAID,WAAWC,aA/BnCZ,EAAKgB,gBC/EPa,UAJf,WACE,OAAO,cAAC,EAAD","file":"static/js/7.23af8a72.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useStores } from './../stores/index'\nimport { observer } from 'mobx-react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { List, Spin, Button, Popconfirm, message } from 'antd'\nimport styled from 'styled-components'\nimport Header from '../components/Header'\nimport { Avatar, Space } from 'antd'\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons'\nimport '../assets/List.css'\nimport { useTranslation } from 'react-i18next'\n//总容器\nconst Wrapper = styled.div`\n  // border:1px solid red;\n  background: #fff;\n  margin: 55px;\n  border-radius: 5px;\n  padding: 20px;\n  width: 1000px;\n`\n//头部\nconst HeaderWrapper = styled.div`\n  // border: 1px solid red;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n`\n//列表\nconst ListWrapper = styled.div``\n\n//按钮\nconst StyledButton = styled(Button)`\n  widht: 200px;\n  height: 200px;\n`\n\nconst Component = observer(() => {\n  const { HistoryStore } = useStores()\n  const { t } = useTranslation()\n  const loadMore = () => {\n    HistoryStore.find()\n    console.log(HistoryStore.list)\n  }\n\n  useEffect(() => {\n    HistoryStore.find()\n    return () => {\n      HistoryStore.reset()\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteHistory = img => {\n    const confirm = window.confirm('此操作将永久删除该历史, 是否继续?')\n    if (confirm) {\n      HistoryStore.delete(img.id)\n    }\n  }\n\n  const IconText = ({ icon, text }) => (\n    <Space>\n      {React.createElement(icon)}\n      {text}\n    </Space>\n  )\n  return (\n    <Wrapper>\n      <HeaderWrapper>\n        <Header />\n      </HeaderWrapper>\n      <List\n        itemLayout=\"vertical\"\n        pagination={{\n          onChange: page => {\n            console.log(page)\n          },\n          pageSize: 3\n        }}\n        dataSource={HistoryStore.list}\n        footer={\n          <div className=\"footer\">\n            <b>impup design</b> footer part\n          </div>\n        }\n        renderItem={item => (\n          <List.Item\n            key={item.title}\n            actions={[\n              <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n              <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n              <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />\n            ]}\n            extra={<img width={100} heigh={100} alt=\"logo\" src={item.attributes.url.attributes.url} />}\n          >\n            <List>\n              <div className=\"title\">\n                <svg className=\"icon\" aria-hidden=\"true\">\n                  <use xlinkHref=\"#icon-touxiang4\"></use>\n                </svg>\n                <List.Item.Meta title={t('图片名称：') + item.attributes.filename} description={item.description} />\n                <ListWrapper>\n                  <StyledButton\n                    type=\"primary\"\n                    onClick={() => {\n                      deleteHistory(item)\n                    }}\n                  >\n                    {t('删除')}\n                  </StyledButton>\n                </ListWrapper>\n              </div>\n\n              <span>\n                {' '}\n                {t('URL地址：')}\n                {\n                  <a target=\"_blank\" href={item.attributes.url.attributes.url} rel=\"noopener noreferrer\">\n                    {item.attributes.url.attributes.url}\n                  </a>\n                }\n              </span>\n            </List>\n          </List.Item>\n        )}\n      />\n    </Wrapper>\n  )\n})\n\nexport default Component\n","import React from 'react'\nimport List from '../components/List'\n\nfunction History() {\n  return <List />\n}\n\nexport default History\n"],"sourceRoot":""}